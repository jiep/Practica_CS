
<BugCollection sequence='0' release='' analysisTimestamp='1424856987099' version='3.0.0' timestamp='1424249024000'><Project projectName='MavenCS'><Jar>/home/alumno/Escritorio/Practica_CS-master/target/classes</Jar><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/mojo/findbugs-maven-plugin/3.0.0/findbugs-maven-plugin-3.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/gmaven/gmaven-mojo/1.4/gmaven-mojo-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/gmaven/runtime/gmaven-runtime-api/1.4/gmaven-runtime-api-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/gmaven/feature/gmaven-feature-api/1.4/gmaven-feature-api-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/gmaven/runtime/gmaven-runtime-1.5/1.4/gmaven-runtime-1.5-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/gmaven/feature/gmaven-feature-support/1.4/gmaven-feature-support-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/groovy/groovy-all-minimal/1.5.8/groovy-all-minimal-1.5.8.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/ant/ant/1.8.2/ant-1.8.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/ant/ant-launcher/1.8.2/ant-launcher-1.8.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.1/plexus-interpolation-1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/gmaven/gmaven-plugin/1.4/gmaven-plugin-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/gmaven/runtime/gmaven-runtime-loader/1.4/gmaven-runtime-loader-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/gmaven/runtime/gmaven-runtime-support/1.4/gmaven-runtime-support-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/sonatype/gshell/gshell-io/2.4/gshell-io-2.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/com/thoughtworks/qdox/qdox/1.12/qdox-1.12.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/maven/shared/file-management/1.2.1/file-management-1.2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/maven/shared/maven-shared-io/1.1/maven-shared-io-1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/sonatype/gossip/gossip/1.2/gossip-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/maven/reporting/maven-reporting-impl/2.1/maven-reporting-impl-2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/commons-validator/commons-validator/1.2.0/commons-validator-1.2.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/commons-digester/commons-digester/1.6/commons-digester-1.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/groovy/groovy-all/1.7.4/groovy-all-1.7.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/maven/doxia/doxia-core/1.1.3/doxia-core-1.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.1.3/doxia-logging-api-1.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.1.3/doxia-decoration-model-1.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.1.3/doxia-module-xhtml-1.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/maven/doxia/doxia-module-fml/1.1.3/doxia-module-fml-1.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-7/plexus-i18n-1.0-beta-7.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/plexus/plexus-velocity/1.1.7/plexus-velocity-1.1.7.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/velocity/velocity/1.5/velocity-1.5.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/commons-collections/commons-collections/3.2/commons-collections-3.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/apache/maven/shared/maven-doxia-tools/1.2.1/maven-doxia-tools-1.2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/com/google/code/findbugs/findbugs/3.0.0/findbugs-3.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/com/google/code/findbugs/bcel-findbugs/6.0/bcel-findbugs-6.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/com/google/code/findbugs/annotations/3.0.0/annotations-3.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/com/google/code/findbugs/jFormatString/3.0.0/jFormatString-3.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/jaxen/jaxen/1.1.6/jaxen-1.1.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/ow2/asm/asm-debug-all/5.0.2/asm-debug-all-5.0.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/jgoodies/plastic/1.2.0/plastic-1.2.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/plexus/plexus-resources/1.0-alpha-7/plexus-resources-1.0-alpha-7.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.6/plexus-utils-1.5.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/alumno/.m2/repository/org/sonatype/plexus/plexus-build-api/0.0.7/plexus-build-api-0.0.7.jar</AuxClasspathEntry><SrcDir>/home/alumno/Escritorio/Practica_CS-master/src/main/java</SrcDir><WrkDir>/home/alumno/Escritorio/Practica_CS-master/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='d4a31772a8327bad55562169db4986cd' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>practicafinal.Calendario.getCalendario() may expose internal representation by returning Calendario.calendario</LongMessage><Class classname='practicafinal.Calendario' primary='true'><SourceLine classname='practicafinal.Calendario' start='11' end='87' sourcepath='practicafinal/Calendario.java' sourcefile='Calendario.java'><Message>At Calendario.java:[lines 11-87]</Message></SourceLine><Message>In class practicafinal.Calendario</Message></Class><Method isStatic='false' classname='practicafinal.Calendario' signature='()[[Lpracticafinal/Partido;' name='getCalendario' primary='true'><SourceLine endBytecode='46' classname='practicafinal.Calendario' start='15' end='15' sourcepath='practicafinal/Calendario.java' sourcefile='Calendario.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Calendario.getCalendario()</Message></Method><Field isStatic='false' classname='practicafinal.Calendario' signature='[[Lpracticafinal/Partido;' name='calendario' primary='true'><SourceLine classname='practicafinal.Calendario' sourcepath='practicafinal/Calendario.java' sourcefile='Calendario.java'><Message>In Calendario.java</Message></SourceLine><Message>Field practicafinal.Calendario.calendario</Message></Field><SourceLine endBytecode='4' classname='practicafinal.Calendario' start='15' end='15' sourcepath='practicafinal/Calendario.java' sourcefile='Calendario.java' startBytecode='4' primary='true'><Message>At Calendario.java:[line 15]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='dd63e88ca54b3fa01a8b6c5ca290a111' rank='15' abbrev='FE' category='STYLE' priority='1' type='FE_FLOATING_POINT_EQUALITY' instanceOccurrenceMax='0'><ShortMessage>Test for floating point equality</ShortMessage><LongMessage>Test for floating point equality in practicafinal.Calendario.generarCalendarioCopa(ArrayList)</LongMessage><Class classname='practicafinal.Calendario' primary='true'><SourceLine classname='practicafinal.Calendario' start='11' end='87' sourcepath='practicafinal/Calendario.java' sourcefile='Calendario.java'><Message>At Calendario.java:[lines 11-87]</Message></SourceLine><Message>In class practicafinal.Calendario</Message></Class><Method isStatic='false' classname='practicafinal.Calendario' signature='(Ljava/util/ArrayList;)V' name='generarCalendarioCopa' primary='true'><SourceLine endBytecode='395' classname='practicafinal.Calendario' start='42' end='61' sourcepath='practicafinal/Calendario.java' sourcefile='Calendario.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Calendario.generarCalendarioCopa(ArrayList)</Message></Method><SourceLine endBytecode='35' classname='practicafinal.Calendario' start='42' end='42' sourcepath='practicafinal/Calendario.java' sourcefile='Calendario.java' startBytecode='35' primary='true'><Message>At Calendario.java:[line 42]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='86bcb59471c4d70c5235e61313b3d629' cweid='192' rank='9' abbrev='ICAST' category='CORRECTNESS' priority='2' type='ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND' instanceOccurrenceMax='0'><ShortMessage>int value cast to float and then passed to Math.round</ShortMessage><LongMessage>int value cast to float and then passed to Math.round in practicafinal.Calendario.horario(int)</LongMessage><Class classname='practicafinal.Calendario' primary='true'><SourceLine classname='practicafinal.Calendario' start='11' end='87' sourcepath='practicafinal/Calendario.java' sourcefile='Calendario.java'><Message>At Calendario.java:[lines 11-87]</Message></SourceLine><Message>In class practicafinal.Calendario</Message></Class><Method isStatic='false' classname='practicafinal.Calendario' signature='(I)Ljava/util/GregorianCalendar;' name='horario' primary='true'><SourceLine endBytecode='124' classname='practicafinal.Calendario' start='31' end='34' sourcepath='practicafinal/Calendario.java' sourcefile='Calendario.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Calendario.horario(int)</Message></Method><SourceLine endBytecode='34' classname='practicafinal.Calendario' start='33' end='33' sourcepath='practicafinal/Calendario.java' sourcefile='Calendario.java' startBytecode='34' primary='true'><Message>At Calendario.java:[line 33]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f6544adef33ffe61de5d0f4c4e5f7f88' rank='16' abbrev='BC' category='BAD_PRACTICE' priority='2' type='BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS' instanceOccurrenceMax='0'><ShortMessage>Equals method should not assume anything about the type of its argument</ShortMessage><LongMessage>Equals method for practicafinal.Directivo assumes the argument is of type Directivo</LongMessage><Class classname='practicafinal.Directivo' primary='true'><SourceLine classname='practicafinal.Directivo' start='11' end='29' sourcepath='practicafinal/Directivo.java' sourcefile='Directivo.java'><Message>At Directivo.java:[lines 11-29]</Message></SourceLine><Message>In class practicafinal.Directivo</Message></Class><Method isStatic='false' classname='practicafinal.Directivo' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='104' classname='practicafinal.Directivo' start='28' end='29' sourcepath='practicafinal/Directivo.java' sourcefile='Directivo.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Directivo.equals(Object)</Message></Method><SourceLine endBytecode='1' classname='practicafinal.Directivo' start='28' end='28' sourcepath='practicafinal/Directivo.java' sourcefile='Directivo.java' startBytecode='1' primary='true'><Message>At Directivo.java:[line 28]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='43c7e258633e1cdb824e8fb6688e78d3' rank='14' abbrev='HE' category='BAD_PRACTICE' priority='1' type='HE_EQUALS_USE_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class defines equals() and uses Object.hashCode()</ShortMessage><LongMessage>practicafinal.Directivo defines equals and uses Object.hashCode()</LongMessage><Class classname='practicafinal.Directivo' primary='true'><SourceLine classname='practicafinal.Directivo' start='11' end='29' sourcepath='practicafinal/Directivo.java' sourcefile='Directivo.java'><Message>At Directivo.java:[lines 11-29]</Message></SourceLine><Message>In class practicafinal.Directivo</Message></Class><Method isStatic='false' classname='practicafinal.Directivo' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='104' classname='practicafinal.Directivo' start='28' end='29' sourcepath='practicafinal/Directivo.java' sourcefile='Directivo.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Directivo.equals(Object)</Message></Method><SourceLine synthetic='true' endBytecode='104' classname='practicafinal.Directivo' start='28' end='29' sourcepath='practicafinal/Directivo.java' sourcefile='Directivo.java' startBytecode='0'><Message>At Directivo.java:[lines 28-29]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='52ec39cc64b9d1c9bad36e0761931033' cweid='476' rank='11' abbrev='NP' category='BAD_PRACTICE' priority='2' type='NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT' instanceOccurrenceMax='0'><ShortMessage>equals() method does not check for null argument</ShortMessage><LongMessage>practicafinal.Directivo.equals(Object) does not check for null argument</LongMessage><Class classname='practicafinal.Directivo' primary='true'><SourceLine classname='practicafinal.Directivo' start='11' end='29' sourcepath='practicafinal/Directivo.java' sourcefile='Directivo.java'><Message>At Directivo.java:[lines 11-29]</Message></SourceLine><Message>In class practicafinal.Directivo</Message></Class><Method isStatic='false' classname='practicafinal.Directivo' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='104' classname='practicafinal.Directivo' start='28' end='29' sourcepath='practicafinal/Directivo.java' sourcefile='Directivo.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Directivo.equals(Object)</Message></Method><LocalVariable role='LOCAL_VARIABLE_PARAMETER_NAMED' pc='0' name='o' register='1'><Message>Parameter o</Message></LocalVariable><SourceLine synthetic='true' endBytecode='104' classname='practicafinal.Directivo' start='28' end='29' sourcepath='practicafinal/Directivo.java' sourcefile='Directivo.java' startBytecode='0'><Message>At Directivo.java:[lines 28-29]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e90901c403c3fca1a34eda357685e26b' rank='16' abbrev='BC' category='BAD_PRACTICE' priority='2' type='BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS' instanceOccurrenceMax='0'><ShortMessage>Equals method should not assume anything about the type of its argument</ShortMessage><LongMessage>Equals method for practicafinal.Equipo assumes the argument is of type Equipo</LongMessage><Class classname='practicafinal.Equipo' primary='true'><SourceLine classname='practicafinal.Equipo' start='28' end='262' sourcepath='practicafinal/Equipo.java' sourcefile='Equipo.java'><Message>At Equipo.java:[lines 28-262]</Message></SourceLine><Message>In class practicafinal.Equipo</Message></Class><Method isStatic='false' classname='practicafinal.Equipo' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='82' classname='practicafinal.Equipo' start='261' end='262' sourcepath='practicafinal/Equipo.java' sourcefile='Equipo.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Equipo.equals(Object)</Message></Method><SourceLine endBytecode='1' classname='practicafinal.Equipo' start='261' end='261' sourcepath='practicafinal/Equipo.java' sourcefile='Equipo.java' startBytecode='1' primary='true'><Message>At Equipo.java:[line 261]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a8f77519db5f85f09ed6c4bb104e5371' rank='14' abbrev='HE' category='BAD_PRACTICE' priority='1' type='HE_EQUALS_USE_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class defines equals() and uses Object.hashCode()</ShortMessage><LongMessage>practicafinal.Equipo defines equals and uses Object.hashCode()</LongMessage><Class classname='practicafinal.Equipo' primary='true'><SourceLine classname='practicafinal.Equipo' start='28' end='262' sourcepath='practicafinal/Equipo.java' sourcefile='Equipo.java'><Message>At Equipo.java:[lines 28-262]</Message></SourceLine><Message>In class practicafinal.Equipo</Message></Class><Method isStatic='false' classname='practicafinal.Equipo' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='82' classname='practicafinal.Equipo' start='261' end='262' sourcepath='practicafinal/Equipo.java' sourcefile='Equipo.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Equipo.equals(Object)</Message></Method><SourceLine synthetic='true' endBytecode='82' classname='practicafinal.Equipo' start='261' end='262' sourcepath='practicafinal/Equipo.java' sourcefile='Equipo.java' startBytecode='0'><Message>At Equipo.java:[lines 261-262]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4e3b2617f1eee2cf9a6cb829e10137b9' cweid='476' rank='11' abbrev='NP' category='BAD_PRACTICE' priority='2' type='NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT' instanceOccurrenceMax='0'><ShortMessage>equals() method does not check for null argument</ShortMessage><LongMessage>practicafinal.Equipo.equals(Object) does not check for null argument</LongMessage><Class classname='practicafinal.Equipo' primary='true'><SourceLine classname='practicafinal.Equipo' start='28' end='262' sourcepath='practicafinal/Equipo.java' sourcefile='Equipo.java'><Message>At Equipo.java:[lines 28-262]</Message></SourceLine><Message>In class practicafinal.Equipo</Message></Class><Method isStatic='false' classname='practicafinal.Equipo' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='82' classname='practicafinal.Equipo' start='261' end='262' sourcepath='practicafinal/Equipo.java' sourcefile='Equipo.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Equipo.equals(Object)</Message></Method><LocalVariable role='LOCAL_VARIABLE_PARAMETER_NAMED' pc='0' name='o' register='1'><Message>Parameter o</Message></LocalVariable><SourceLine synthetic='true' endBytecode='82' classname='practicafinal.Equipo' start='261' end='262' sourcepath='practicafinal/Equipo.java' sourcefile='Equipo.java' startBytecode='0'><Message>At Equipo.java:[lines 261-262]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='fd8e7a49b32b1fb193a30a306bd1dfa' rank='18' abbrev='SBSC' category='PERFORMANCE' priority='2' type='SBSC_USE_STRINGBUFFER_CONCATENATION' instanceOccurrenceMax='0'><ShortMessage>Method concatenates strings using + in a loop</ShortMessage><LongMessage>practicafinal.Estadio.toString() concatenates strings using + in a loop</LongMessage><Class classname='practicafinal.Estadio' primary='true'><SourceLine classname='practicafinal.Estadio' start='19' end='75' sourcepath='practicafinal/Estadio.java' sourcefile='Estadio.java'><Message>At Estadio.java:[lines 19-75]</Message></SourceLine><Message>In class practicafinal.Estadio</Message></Class><Method isStatic='false' classname='practicafinal.Estadio' signature='()Ljava/lang/String;' name='toString' primary='true'><SourceLine endBytecode='194' classname='practicafinal.Estadio' start='69' end='75' sourcepath='practicafinal/Estadio.java' sourcefile='Estadio.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Estadio.toString()</Message></Method><SourceLine endBytecode='81' classname='practicafinal.Estadio' start='73' end='73' sourcepath='practicafinal/Estadio.java' sourcefile='Estadio.java' startBytecode='81' primary='true'><Message>At Estadio.java:[line 73]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4650eb531ee547f8e4741a3e6a388ea0' rank='16' abbrev='BC' category='BAD_PRACTICE' priority='2' type='BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS' instanceOccurrenceMax='0'><ShortMessage>Equals method should not assume anything about the type of its argument</ShortMessage><LongMessage>Equals method for practicafinal.Jugador assumes the argument is of type Jugador</LongMessage><Class classname='practicafinal.Jugador' primary='true'><SourceLine classname='practicafinal.Jugador' start='19' end='108' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java'><Message>At Jugador.java:[lines 19-108]</Message></SourceLine><Message>In class practicafinal.Jugador</Message></Class><Method isStatic='false' classname='practicafinal.Jugador' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='82' classname='practicafinal.Jugador' start='102' end='103' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Jugador.equals(Object)</Message></Method><SourceLine endBytecode='1' classname='practicafinal.Jugador' start='102' end='102' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java' startBytecode='1' primary='true'><Message>At Jugador.java:[line 102]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a97ef42eaad2b1edd00bf83b337332d8' rank='18' abbrev='Dm' category='PERFORMANCE' priority='2' type='DM_NEW_FOR_GETCLASS' instanceOccurrenceMax='0'><ShortMessage>Method allocates an object, only to get the class object</ShortMessage><LongMessage>practicafinal.Jugador.esDeCampo() allocates an object, only to get the class object</LongMessage><Class classname='practicafinal.Jugador' primary='true'><SourceLine classname='practicafinal.Jugador' start='19' end='108' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java'><Message>At Jugador.java:[lines 19-108]</Message></SourceLine><Message>In class practicafinal.Jugador</Message></Class><Method isStatic='false' classname='practicafinal.Jugador' signature='()Z' name='esDeCampo' primary='true'><SourceLine endBytecode='59' classname='practicafinal.Jugador' start='79' end='79' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Jugador.esDeCampo()</Message></Method><SourceLine endBytecode='11' classname='practicafinal.Jugador' start='79' end='79' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java' startBytecode='11' primary='true'><Message>At Jugador.java:[line 79]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2bdf51d459f9fc86865e4bfc8f94f60e' rank='16' abbrev='HE' category='BAD_PRACTICE' priority='2' type='HE_EQUALS_USE_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class defines equals() and uses Object.hashCode()</ShortMessage><LongMessage>practicafinal.Jugador defines equals and uses Object.hashCode()</LongMessage><Class classname='practicafinal.Jugador' primary='true'><SourceLine classname='practicafinal.Jugador' start='19' end='108' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java'><Message>At Jugador.java:[lines 19-108]</Message></SourceLine><Message>In class practicafinal.Jugador</Message></Class><Method isStatic='false' classname='practicafinal.Jugador' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='82' classname='practicafinal.Jugador' start='102' end='103' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Jugador.equals(Object)</Message></Method><SourceLine synthetic='true' endBytecode='82' classname='practicafinal.Jugador' start='102' end='103' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java' startBytecode='0'><Message>At Jugador.java:[lines 102-103]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1ec685eb084309524d543acae58c443e' cweid='476' rank='11' abbrev='NP' category='BAD_PRACTICE' priority='2' type='NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT' instanceOccurrenceMax='0'><ShortMessage>equals() method does not check for null argument</ShortMessage><LongMessage>practicafinal.Jugador.equals(Object) does not check for null argument</LongMessage><Class classname='practicafinal.Jugador' primary='true'><SourceLine classname='practicafinal.Jugador' start='19' end='108' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java'><Message>At Jugador.java:[lines 19-108]</Message></SourceLine><Message>In class practicafinal.Jugador</Message></Class><Method isStatic='false' classname='practicafinal.Jugador' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='82' classname='practicafinal.Jugador' start='102' end='103' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Jugador.equals(Object)</Message></Method><LocalVariable role='LOCAL_VARIABLE_PARAMETER_NAMED' pc='0' name='o' register='1'><Message>Parameter o</Message></LocalVariable><SourceLine synthetic='true' endBytecode='82' classname='practicafinal.Jugador' start='102' end='103' sourcepath='practicafinal/Jugador.java' sourcefile='Jugador.java' startBytecode='0'><Message>At Jugador.java:[lines 102-103]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6776e1f56abbcdd857b2727050b9431c' rank='16' abbrev='HE' category='BAD_PRACTICE' priority='2' type='HE_INHERITS_EQUALS_USE_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class inherits equals() and uses Object.hashCode()</ShortMessage><LongMessage>practicafinal.JugadorCampo inherits equals and uses Object.hashCode()</LongMessage><Class classname='practicafinal.JugadorCampo' primary='true'><SourceLine classname='practicafinal.JugadorCampo' start='16' end='71' sourcepath='practicafinal/JugadorCampo.java' sourcefile='JugadorCampo.java'><Message>At JugadorCampo.java:[lines 16-71]</Message></SourceLine><Message>In class practicafinal.JugadorCampo</Message></Class><SourceLine synthetic='true' classname='practicafinal.JugadorCampo' start='16' end='71' sourcepath='practicafinal/JugadorCampo.java' sourcefile='JugadorCampo.java'><Message>At JugadorCampo.java:[lines 16-71]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f8932ee48733d1159a87f5fe46ccbd26' cweid='674' rank='9' abbrev='IL' category='CORRECTNESS' priority='1' type='IL_INFINITE_RECURSIVE_LOOP' instanceOccurrenceMax='0'><ShortMessage>An apparent infinite recursive loop</ShortMessage><LongMessage>There is an apparent infinite recursive loop in practicafinal.JugadorCampo.toString()</LongMessage><Class classname='practicafinal.JugadorCampo' primary='true'><SourceLine classname='practicafinal.JugadorCampo' start='16' end='71' sourcepath='practicafinal/JugadorCampo.java' sourcefile='JugadorCampo.java'><Message>At JugadorCampo.java:[lines 16-71]</Message></SourceLine><Message>In class practicafinal.JugadorCampo</Message></Class><Method isStatic='false' classname='practicafinal.JugadorCampo' signature='()Ljava/lang/String;' name='toString' primary='true'><SourceLine endBytecode='46' classname='practicafinal.JugadorCampo' start='71' end='71' sourcepath='practicafinal/JugadorCampo.java' sourcefile='JugadorCampo.java' startBytecode='0'></SourceLine><Message>In method practicafinal.JugadorCampo.toString()</Message></Method><SourceLine endBytecode='1' classname='practicafinal.JugadorCampo' start='71' end='71' sourcepath='practicafinal/JugadorCampo.java' sourcefile='JugadorCampo.java' startBytecode='1' primary='true'><Message>At JugadorCampo.java:[line 71]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='12be8be5b56b767e4c49dd98dd4ccffb' cweid='218' rank='18' abbrev='MS' category='MALICIOUS_CODE' priority='2' type='MS_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field should be package protected</ShortMessage><LongMessage>practicafinal.Mercado.jugadores should be package protected</LongMessage><Class classname='practicafinal.Mercado' primary='true'><SourceLine classname='practicafinal.Mercado' start='10' end='35' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java'><Message>At Mercado.java:[lines 10-35]</Message></SourceLine><Message>In class practicafinal.Mercado</Message></Class><Field isStatic='true' classname='practicafinal.Mercado' signature='Ljava/util/ArrayList;' name='jugadores' primary='true'><SourceLine classname='practicafinal.Mercado' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java'><Message>In Mercado.java</Message></SourceLine><Message>Field practicafinal.Mercado.jugadores</Message></Field><SourceLine synthetic='true' classname='practicafinal.Mercado' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java'><Message>In Mercado.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f2d1e4988c96745cb24dc7b8b6a3808b' rank='15' abbrev='ST' category='STYLE' priority='1' type='ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD' instanceOccurrenceMax='0'><ShortMessage>Write to static field from instance method</ShortMessage><LongMessage>Write to static field practicafinal.Mercado.jugadores from instance method new practicafinal.Mercado()</LongMessage><Class classname='practicafinal.Mercado' primary='true'><SourceLine classname='practicafinal.Mercado' start='10' end='35' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java'><Message>At Mercado.java:[lines 10-35]</Message></SourceLine><Message>In class practicafinal.Mercado</Message></Class><Method isStatic='false' classname='practicafinal.Mercado' signature='()V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='64' classname='practicafinal.Mercado' start='10' end='12' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java' startBytecode='0'></SourceLine><Message>In method new practicafinal.Mercado()</Message></Method><Field isStatic='true' classname='practicafinal.Mercado' signature='Ljava/util/ArrayList;' name='jugadores' primary='true'><SourceLine classname='practicafinal.Mercado' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java'><Message>In Mercado.java</Message></SourceLine><Message>Field practicafinal.Mercado.jugadores</Message></Field><SourceLine endBytecode='11' classname='practicafinal.Mercado' start='11' end='11' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java' startBytecode='11' primary='true'><Message>At Mercado.java:[line 11]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2df83fae8f4bff138a18e73e6d392a68' rank='15' abbrev='ST' category='STYLE' priority='1' type='ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD' instanceOccurrenceMax='0'><ShortMessage>Write to static field from instance method</ShortMessage><LongMessage>Write to static field practicafinal.Mercado.jugadores from instance method practicafinal.Mercado.cargarMercado(ArrayList)</LongMessage><Class classname='practicafinal.Mercado' primary='true'><SourceLine classname='practicafinal.Mercado' start='10' end='35' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java'><Message>At Mercado.java:[lines 10-35]</Message></SourceLine><Message>In class practicafinal.Mercado</Message></Class><Method isStatic='false' classname='practicafinal.Mercado' signature='(Ljava/util/ArrayList;)V' name='cargarMercado' primary='true'><SourceLine endBytecode='78' classname='practicafinal.Mercado' start='19' end='20' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Mercado.cargarMercado(ArrayList)</Message></Method><Field isStatic='true' classname='practicafinal.Mercado' signature='Ljava/util/ArrayList;' name='jugadores' primary='true'><SourceLine classname='practicafinal.Mercado' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java'><Message>In Mercado.java</Message></SourceLine><Message>Field practicafinal.Mercado.jugadores</Message></Field><SourceLine endBytecode='1' classname='practicafinal.Mercado' start='19' end='19' sourcepath='practicafinal/Mercado.java' sourcefile='Mercado.java' startBytecode='1' primary='true'><Message>At Mercado.java:[line 19]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='967d98f1f0deaf772d4157ba7ccf3363' cweid='192' rank='17' abbrev='ICAST' category='STYLE' priority='2' type='ICAST_IDIV_CAST_TO_DOUBLE' instanceOccurrenceMax='0'><ShortMessage>Integral division result cast to double or float</ShortMessage><LongMessage>Integral division result cast to double or float in practicafinal.Partido.golesEquipo(Equipo, Equipo)</LongMessage><Class classname='practicafinal.Partido' primary='true'><SourceLine classname='practicafinal.Partido' start='15' end='103' sourcepath='practicafinal/Partido.java' sourcefile='Partido.java'><Message>At Partido.java:[lines 15-103]</Message></SourceLine><Message>In class practicafinal.Partido</Message></Class><Method isStatic='false' classname='practicafinal.Partido' signature='(Lpracticafinal/Equipo;Lpracticafinal/Equipo;)Ljava/lang/String;' name='golesEquipo' primary='true'><SourceLine endBytecode='362' classname='practicafinal.Partido' start='58' end='79' sourcepath='practicafinal/Partido.java' sourcefile='Partido.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Partido.golesEquipo(Equipo, Equipo)</Message></Method><SourceLine endBytecode='28' classname='practicafinal.Partido' start='62' end='62' sourcepath='practicafinal/Partido.java' sourcefile='Partido.java' startBytecode='28' primary='true'><Message>At Partido.java:[line 62]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='43' classname='practicafinal.Partido' start='63' end='63' sourcepath='practicafinal/Partido.java' sourcefile='Partido.java' startBytecode='43'><Message>Another occurrence at Partido.java:[line 63]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='80' classname='practicafinal.Partido' start='69' end='69' sourcepath='practicafinal/Partido.java' sourcefile='Partido.java' startBytecode='80'><Message>Another occurrence at Partido.java:[line 69]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='94' classname='practicafinal.Partido' start='70' end='70' sourcepath='practicafinal/Partido.java' sourcefile='Partido.java' startBytecode='94'><Message>Another occurrence at Partido.java:[line 70]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='785049ef987a1d0da7e898561665ab96' rank='14' abbrev='Se' category='BAD_PRACTICE' priority='1' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class practicafinal.Partido defines non-transient non-serializable instance field estadio</LongMessage><Class classname='practicafinal.Partido' primary='true'><SourceLine classname='practicafinal.Partido' start='15' end='103' sourcepath='practicafinal/Partido.java' sourcefile='Partido.java'><Message>At Partido.java:[lines 15-103]</Message></SourceLine><Message>In class practicafinal.Partido</Message></Class><Field isStatic='false' classname='practicafinal.Partido' signature='Lpracticafinal/Estadio;' name='estadio' primary='true'><SourceLine classname='practicafinal.Partido' sourcepath='practicafinal/Partido.java' sourcefile='Partido.java'><Message>In Partido.java</Message></SourceLine><Message>Field practicafinal.Partido.estadio</Message></Field><Type role='TYPE_FOUND' descriptor='Lpracticafinal/Estadio;'><SourceLine classname='practicafinal.Estadio' start='19' end='75' sourcepath='practicafinal/Estadio.java' sourcefile='Estadio.java'><Message>At Estadio.java:[lines 19-75]</Message></SourceLine><Message>Actual type practicafinal.Estadio</Message></Type><SourceLine synthetic='true' classname='practicafinal.Partido' sourcepath='practicafinal/Partido.java' sourcefile='Partido.java'><Message>In Partido.java</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ccdead6718d72b7109b5ffc4304e712' rank='16' abbrev='HE' category='BAD_PRACTICE' priority='2' type='HE_INHERITS_EQUALS_USE_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class inherits equals() and uses Object.hashCode()</ShortMessage><LongMessage>practicafinal.Portero inherits equals and uses Object.hashCode()</LongMessage><Class classname='practicafinal.Portero' primary='true'><SourceLine classname='practicafinal.Portero' start='16' end='70' sourcepath='practicafinal/Portero.java' sourcefile='Portero.java'><Message>At Portero.java:[lines 16-70]</Message></SourceLine><Message>In class practicafinal.Portero</Message></Class><SourceLine synthetic='true' classname='practicafinal.Portero' start='16' end='70' sourcepath='practicafinal/Portero.java' sourcefile='Portero.java'><Message>At Portero.java:[lines 16-70]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d3cbc4d4ba7bd40b9a153b72cb37319d' rank='14' abbrev='HE' category='BAD_PRACTICE' priority='1' type='HE_EQUALS_USE_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class defines equals() and uses Object.hashCode()</ShortMessage><LongMessage>practicafinal.Torneo defines equals and uses Object.hashCode()</LongMessage><Class classname='practicafinal.Torneo' primary='true'><SourceLine classname='practicafinal.Torneo' start='18' end='105' sourcepath='practicafinal/Torneo.java' sourcefile='Torneo.java'><Message>At Torneo.java:[lines 18-105]</Message></SourceLine><Message>In class practicafinal.Torneo</Message></Class><Method isStatic='false' classname='practicafinal.Torneo' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='111' classname='practicafinal.Torneo' start='70' end='73' sourcepath='practicafinal/Torneo.java' sourcefile='Torneo.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Torneo.equals(Object)</Message></Method><SourceLine synthetic='true' endBytecode='111' classname='practicafinal.Torneo' start='70' end='73' sourcepath='practicafinal/Torneo.java' sourcefile='Torneo.java' startBytecode='0'><Message>At Torneo.java:[lines 70-73]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='50b1d426f1f1864c6a05f8f802b7bee2' cweid='476' rank='11' abbrev='NP' category='BAD_PRACTICE' priority='2' type='NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT' instanceOccurrenceMax='0'><ShortMessage>equals() method does not check for null argument</ShortMessage><LongMessage>practicafinal.Torneo.equals(Object) does not check for null argument</LongMessage><Class classname='practicafinal.Torneo' primary='true'><SourceLine classname='practicafinal.Torneo' start='18' end='105' sourcepath='practicafinal/Torneo.java' sourcefile='Torneo.java'><Message>At Torneo.java:[lines 18-105]</Message></SourceLine><Message>In class practicafinal.Torneo</Message></Class><Method isStatic='false' classname='practicafinal.Torneo' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='111' classname='practicafinal.Torneo' start='70' end='73' sourcepath='practicafinal/Torneo.java' sourcefile='Torneo.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Torneo.equals(Object)</Message></Method><LocalVariable role='LOCAL_VARIABLE_PARAMETER_NAMED' pc='0' name='o' register='1'><Message>Parameter o</Message></LocalVariable><SourceLine synthetic='true' endBytecode='111' classname='practicafinal.Torneo' start='70' end='73' sourcepath='practicafinal/Torneo.java' sourcefile='Torneo.java' startBytecode='0'><Message>At Torneo.java:[lines 70-73]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='58ba9be7c9c278b77331cb981d54fa92' rank='18' abbrev='Dm' category='PERFORMANCE' priority='2' type='DM_NEW_FOR_GETCLASS' instanceOccurrenceMax='0'><ShortMessage>Method allocates an object, only to get the class object</ShortMessage><LongMessage>practicafinal.Ventana.jugAdescartarValueChanged(ListSelectionEvent) allocates an object, only to get the class object</LongMessage><Class classname='practicafinal.Ventana' primary='true'><SourceLine classname='practicafinal.Ventana' start='20' end='3009' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>At Ventana.java:[lines 20-3009]</Message></SourceLine><Message>In class practicafinal.Ventana</Message></Class><Method isStatic='false' classname='practicafinal.Ventana' signature='(Ljavax/swing/event/ListSelectionEvent;)V' name='jugAdescartarValueChanged' primary='true'><SourceLine endBytecode='1112' classname='practicafinal.Ventana' start='2141' end='2195' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Ventana.jugAdescartarValueChanged(ListSelectionEvent)</Message></Method><SourceLine endBytecode='572' classname='practicafinal.Ventana' start='2170' end='2170' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='572' primary='true'><Message>At Ventana.java:[line 2170]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f12c5e58e2a39a33cef09b49bb479bfb' rank='18' abbrev='Dm' category='PERFORMANCE' priority='2' type='DM_NEW_FOR_GETCLASS' instanceOccurrenceMax='0'><ShortMessage>Method allocates an object, only to get the class object</ShortMessage><LongMessage>practicafinal.Ventana.modificarJugButtonActionPerformed(ActionEvent) allocates an object, only to get the class object</LongMessage><Class classname='practicafinal.Ventana' primary='true'><SourceLine classname='practicafinal.Ventana' start='20' end='3009' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>At Ventana.java:[lines 20-3009]</Message></SourceLine><Message>In class practicafinal.Ventana</Message></Class><Method isStatic='false' classname='practicafinal.Ventana' signature='(Ljava/awt/event/ActionEvent;)V' name='modificarJugButtonActionPerformed' primary='true'><SourceLine endBytecode='1738' classname='practicafinal.Ventana' start='2198' end='2284' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Ventana.modificarJugButtonActionPerformed(ActionEvent)</Message></Method><SourceLine endBytecode='139' classname='practicafinal.Ventana' start='2202' end='2202' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='139' primary='true'><Message>At Ventana.java:[line 2202]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f3f8fa441b46b13cc4ed32fa9c6bcc94' rank='15' abbrev='FE' category='STYLE' priority='1' type='FE_FLOATING_POINT_EQUALITY' instanceOccurrenceMax='0'><ShortMessage>Test for floating point equality</ShortMessage><LongMessage>Test for floating point equality in practicafinal.Ventana.jListEquiposTorneoValueChanged(ListSelectionEvent)</LongMessage><Class classname='practicafinal.Ventana' primary='true'><SourceLine classname='practicafinal.Ventana' start='20' end='3009' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>At Ventana.java:[lines 20-3009]</Message></SourceLine><Message>In class practicafinal.Ventana</Message></Class><Method isStatic='false' classname='practicafinal.Ventana' signature='(Ljavax/swing/event/ListSelectionEvent;)V' name='jListEquiposTorneoValueChanged' primary='true'><SourceLine endBytecode='212' classname='practicafinal.Ventana' start='2487' end='2497' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Ventana.jListEquiposTorneoValueChanged(ListSelectionEvent)</Message></Method><SourceLine endBytecode='52' classname='practicafinal.Ventana' start='2489' end='2489' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='52' primary='true'><Message>At Ventana.java:[line 2489]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='394fa11943db3c619661ff8348947be8' cweid='218' rank='18' abbrev='MS' category='MALICIOUS_CODE' priority='2' type='MS_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field should be package protected</ShortMessage><LongMessage>practicafinal.Ventana.listaEquipos should be package protected</LongMessage><Class classname='practicafinal.Ventana' primary='true'><SourceLine classname='practicafinal.Ventana' start='20' end='3009' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>At Ventana.java:[lines 20-3009]</Message></SourceLine><Message>In class practicafinal.Ventana</Message></Class><Field isStatic='true' classname='practicafinal.Ventana' signature='Ljava/util/ArrayList;' name='listaEquipos' primary='true'><SourceLine classname='practicafinal.Ventana' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>In Ventana.java</Message></SourceLine><Message>Field practicafinal.Ventana.listaEquipos</Message></Field><SourceLine endBytecode='7' classname='practicafinal.Ventana' start='3006' end='3006' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='7' primary='true'><Message>At Ventana.java:[line 3006]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='188b2e91658056690a5681aceb20ccac' cweid='218' rank='18' abbrev='MS' category='MALICIOUS_CODE' priority='2' type='MS_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field should be package protected</ShortMessage><LongMessage>practicafinal.Ventana.listaTorneo should be package protected</LongMessage><Class classname='practicafinal.Ventana' primary='true'><SourceLine classname='practicafinal.Ventana' start='20' end='3009' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>At Ventana.java:[lines 20-3009]</Message></SourceLine><Message>In class practicafinal.Ventana</Message></Class><Field isStatic='true' classname='practicafinal.Ventana' signature='Ljava/util/ArrayList;' name='listaTorneo' primary='true'><SourceLine classname='practicafinal.Ventana' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>In Ventana.java</Message></SourceLine><Message>Field practicafinal.Ventana.listaTorneo</Message></Field><SourceLine endBytecode='17' classname='practicafinal.Ventana' start='3007' end='3007' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='17' primary='true'><Message>At Ventana.java:[line 3007]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='96c2d645aa371fc2c0910759870b6773' cweid='218' rank='18' abbrev='MS' category='MALICIOUS_CODE' priority='2' type='MS_PKGPROTECT' instanceOccurrenceMax='0'><ShortMessage>Field should be package protected</ShortMessage><LongMessage>practicafinal.Ventana.mercado should be package protected</LongMessage><Class classname='practicafinal.Ventana' primary='true'><SourceLine classname='practicafinal.Ventana' start='20' end='3009' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>At Ventana.java:[lines 20-3009]</Message></SourceLine><Message>In class practicafinal.Ventana</Message></Class><Field isStatic='true' classname='practicafinal.Ventana' signature='Lpracticafinal/Mercado;' name='mercado' primary='true'><SourceLine classname='practicafinal.Ventana' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>In Ventana.java</Message></SourceLine><Message>Field practicafinal.Ventana.mercado</Message></Field><SourceLine endBytecode='27' classname='practicafinal.Ventana' start='3008' end='3008' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='27' primary='true'><Message>At Ventana.java:[line 3008]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='66dadcb9d1ecfea5539d407713bb23d7' cweid='218' rank='16' abbrev='MS' category='MALICIOUS_CODE' priority='1' type='MS_SHOULD_BE_FINAL' instanceOccurrenceMax='0'><ShortMessage>Field isn't final but should be</ShortMessage><LongMessage>practicafinal.Ventana.directivos isn't final but should be</LongMessage><Class classname='practicafinal.Ventana' primary='true'><SourceLine classname='practicafinal.Ventana' start='20' end='3009' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>At Ventana.java:[lines 20-3009]</Message></SourceLine><Message>In class practicafinal.Ventana</Message></Class><Field isStatic='true' classname='practicafinal.Ventana' signature='Ljava/util/ArrayList;' name='directivos' primary='true'><SourceLine classname='practicafinal.Ventana' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>In Ventana.java</Message></SourceLine><Message>Field practicafinal.Ventana.directivos</Message></Field><SourceLine endBytecode='37' classname='practicafinal.Ventana' start='3009' end='3009' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='37' primary='true'><Message>At Ventana.java:[line 3009]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ef14c32d13dba09543fc9832b760a0b4' cweid='476' rank='11' abbrev='NP' category='CORRECTNESS' priority='2' type='NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH' instanceOccurrenceMax='0'><ShortMessage>Value is null and guaranteed to be dereferenced on exception path</ShortMessage><LongMessage>fichero is null guaranteed to be dereferenced in practicafinal.Ventana.cargarDatosActionPerformed(ActionEvent) on exception path</LongMessage><Class classname='practicafinal.Ventana' primary='true'><SourceLine classname='practicafinal.Ventana' start='20' end='3009' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>At Ventana.java:[lines 20-3009]</Message></SourceLine><Message>In class practicafinal.Ventana</Message></Class><Method isStatic='false' classname='practicafinal.Ventana' signature='(Ljava/awt/event/ActionEvent;)V' name='cargarDatosActionPerformed' primary='true'><SourceLine endBytecode='1106' classname='practicafinal.Ventana' start='2632' end='2677' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='0'></SourceLine><Message>In method practicafinal.Ventana.cargarDatosActionPerformed(ActionEvent)</Message></Method><LocalVariable role='LOCAL_VARIABLE_VALUE_OF' pc='29' name='fichero' register='2'><Message>Value loaded from fichero</Message></LocalVariable><SourceLine role='SOURCE_LINE_DEREF' endBytecode='279' classname='practicafinal.Ventana' start='2662' end='2662' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='279' primary='true'><Message>Dereferenced at Ventana.java:[line 2662]</Message></SourceLine><SourceLine role='SOURCE_LINE_DEREF' endBytecode='453' classname='practicafinal.Ventana' start='2662' end='2662' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='453'><Message>Dereferenced at Ventana.java:[line 2662]</Message></SourceLine><SourceLine role='SOURCE_LINE_NULL_VALUE' endBytecode='0' classname='practicafinal.Ventana' start='2632' end='2632' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='0'><Message>Null value at Ventana.java:[line 2632]</Message></SourceLine><SourceLine role='SOURCE_LINE_KNOWN_NULL' endBytecode='30' classname='practicafinal.Ventana' start='2638' end='2638' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='30'><Message>Known null at Ventana.java:[line 2638]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.NullDerefProperty.DEREFS_ARE_CLONED' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.NullDerefProperty.LONG_RANGE_NULL_SOURCE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.NullDerefProperty.ALWAYS_ON_EXCEPTION_PATH' value='true'></Property></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d53d331dea9d830a923fa6ba4114883e' rank='15' abbrev='ST' category='STYLE' priority='1' type='ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD' instanceOccurrenceMax='0'><ShortMessage>Write to static field from instance method</ShortMessage><LongMessage>Write to static field practicafinal.Ventana.mercado from instance method new practicafinal.Ventana()</LongMessage><Class classname='practicafinal.Ventana' primary='true'><SourceLine classname='practicafinal.Ventana' start='20' end='3009' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>At Ventana.java:[lines 20-3009]</Message></SourceLine><Message>In class practicafinal.Ventana</Message></Class><Method isStatic='false' classname='practicafinal.Ventana' signature='()V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='153' classname='practicafinal.Ventana' start='25' end='33' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='0'></SourceLine><Message>In method new practicafinal.Ventana()</Message></Method><Field isStatic='true' classname='practicafinal.Ventana' signature='Lpracticafinal/Mercado;' name='mercado' primary='true'><SourceLine classname='practicafinal.Ventana' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java'><Message>In Ventana.java</Message></SourceLine><Message>Field practicafinal.Ventana.mercado</Message></Field><SourceLine endBytecode='11' classname='practicafinal.Ventana' start='26' end='26' sourcepath='practicafinal/Ventana.java' sourcefile='Ventana.java' startBytecode='11' primary='true'><Message>At Ventana.java:[line 26]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugCategory category='CORRECTNESS'><Description>Correctness</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugCategory category='STYLE'><Description>Dodgy code</Description></BugCategory><BugPattern abbrev='ICAST' category='STYLE' type='ICAST_IDIV_CAST_TO_DOUBLE'><ShortDescription>Integral division result cast to double or float</ShortDescription><Details>

&lt;p&gt;
This code casts the result of an integral division (e.g., int or long division)
operation to double or
float.
Doing division on integers truncates the result
to the integer value closest to zero.  The fact that the result
was cast to double suggests that this precision should have been retained.
What was probably meant was to cast one or both of the operands to
double &lt;em&gt;before&lt;/em&gt; performing the division.  Here is an example:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;
int x = 2;
int y = 5;
// Wrong: yields result 0.0
double value1 =  x / y;

// Right: yields result 0.4
double value2 =  x / (double) y;
&lt;/pre&gt;
&lt;/blockquote&gt;

    </Details></BugPattern><BugPattern abbrev='HE' category='BAD_PRACTICE' type='HE_INHERITS_EQUALS_USE_HASHCODE'><ShortDescription>Class inherits equals() and uses Object.hashCode()</ShortDescription><Details>

  &lt;p&gt; This class inherits &lt;code&gt;equals(Object)&lt;/code&gt; from an abstract
  superclass, and &lt;code&gt;hashCode()&lt;/code&gt; from
&lt;code&gt;java.lang.Object&lt;/code&gt; (which returns
  the identity hash code, an arbitrary value assigned to the object
  by the VM).&amp;nbsp; Therefore, the class is very likely to violate the
  invariant that equal objects must have equal hashcodes.&lt;/p&gt;

  &lt;p&gt;If you don't want to define a hashCode method, and/or don't
   believe the object will ever be put into a HashMap/Hashtable,
   define the &lt;code&gt;hashCode()&lt;/code&gt; method
   to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='BC' category='BAD_PRACTICE' type='BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS'><ShortDescription>Equals method should not assume anything about the type of its argument</ShortDescription><Details>

&lt;p&gt;
The &lt;code&gt;equals(Object o)&lt;/code&gt; method shouldn't make any assumptions
about the type of &lt;code&gt;o&lt;/code&gt;. It should simply return
false if &lt;code&gt;o&lt;/code&gt; is not the same type as &lt;code&gt;this&lt;/code&gt;.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='SBSC' category='PERFORMANCE' type='SBSC_USE_STRINGBUFFER_CONCATENATION'><ShortDescription>Method concatenates strings using + in a loop</ShortDescription><Details>

&lt;p&gt; The method seems to be building a String using concatenation in a loop.
In each iteration, the String is converted to a StringBuffer/StringBuilder,
   appended to, and converted back to a String.
   This can lead to a cost quadratic in the number of iterations,
   as the growing string is recopied in each iteration. &lt;/p&gt;

&lt;p&gt;Better performance can be obtained by using
a StringBuffer (or StringBuilder in Java 1.5) explicitly.&lt;/p&gt;

&lt;p&gt; For example:&lt;/p&gt;
&lt;pre&gt;
  // This is bad
  String s = "";
  for (int i = 0; i &amp;lt; field.length; ++i) {
    s = s + field[i];
  }

  // This is better
  StringBuffer buf = new StringBuffer();
  for (int i = 0; i &amp;lt; field.length; ++i) {
    buf.append(field[i]);
  }
  String s = buf.toString();
&lt;/pre&gt;

    </Details></BugPattern><BugPattern cweid='674' abbrev='IL' category='CORRECTNESS' type='IL_INFINITE_RECURSIVE_LOOP'><ShortDescription>An apparent infinite recursive loop</ShortDescription><Details>

&lt;p&gt;This method unconditionally invokes itself. This would seem to indicate
an infinite recursive loop that will result in a stack overflow.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='MS' category='MALICIOUS_CODE' type='MS_SHOULD_BE_FINAL'><ShortDescription>Field isn't final but should be</ShortDescription><Details>

   &lt;p&gt;
This static field public but not final, and
could be changed by malicious code or
        by accident from another package.
        The field could be made final to avoid
        this vulnerability.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='MS' category='MALICIOUS_CODE' type='MS_PKGPROTECT'><ShortDescription>Field should be package protected</ShortDescription><Details>

  &lt;p&gt; A mutable static field could be changed by malicious code or
   by accident.
   The field could be made package protected to avoid
   this vulnerability.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='ST' category='STYLE' type='ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD'><ShortDescription>Write to static field from instance method</ShortDescription><Details>

  &lt;p&gt; This instance method writes to a static field. This is tricky to get
correct if multiple instances are being manipulated,
and generally bad practice.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='ICAST' category='CORRECTNESS' type='ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND'><ShortDescription>int value cast to float and then passed to Math.round</ShortDescription><Details>

&lt;p&gt;
This code converts an int value to a float precision
floating point number and then
passing the result to the Math.round() function, which returns the int/long closest
to the argument. This operation should always be a no-op,
since the converting an integer to a float should give a number with no fractional part.
It is likely that the operation that generated the value to be passed
to Math.round was intended to be performed using
floating point arithmetic.
&lt;/p&gt;


    </Details></BugPattern><BugPattern cweid='374' abbrev='EI' category='MALICIOUS_CODE' type='EI_EXPOSE_REP'><ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription><Details>

  &lt;p&gt; Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='NP' category='BAD_PRACTICE' type='NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT'><ShortDescription>equals() method does not check for null argument</ShortDescription><Details>
      
      &lt;p&gt;
      This implementation of equals(Object) violates the contract defined
      by java.lang.Object.equals() because it does not check for null
      being passed as the argument.  All equals() methods should return
      false if passed a null value.
      &lt;/p&gt;
      
   </Details></BugPattern><BugPattern abbrev='Dm' category='PERFORMANCE' type='DM_NEW_FOR_GETCLASS'><ShortDescription>Method allocates an object, only to get the class object</ShortDescription><Details>

  &lt;p&gt;This method allocates an object just to call getClass() on it, in order to
  retrieve the Class object for it. It is simpler to just access the .class property of the class.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='FE' category='STYLE' type='FE_FLOATING_POINT_EQUALITY'><ShortDescription>Test for floating point equality</ShortDescription><Details>
   
    &lt;p&gt;
    This operation compares two floating point values for equality.
    Because floating point calculations may involve rounding,
   calculated float and double values may not be accurate.
    For values that must be precise, such as monetary values,
   consider using a fixed-precision type such as BigDecimal.
    For values that need not be precise, consider comparing for equality
    within some range, for example:
    &lt;code&gt;if ( Math.abs(x - y) &amp;lt; .0000001 )&lt;/code&gt;.
   See the Java Language Specification, section 4.2.4.
    &lt;/p&gt;
    
     </Details></BugPattern><BugPattern abbrev='HE' category='BAD_PRACTICE' type='HE_EQUALS_USE_HASHCODE'><ShortDescription>Class defines equals() and uses Object.hashCode()</ShortDescription><Details>

  &lt;p&gt; This class overrides &lt;code&gt;equals(Object)&lt;/code&gt;, but does not
  override &lt;code&gt;hashCode()&lt;/code&gt;, and inherits the implementation of
  &lt;code&gt;hashCode()&lt;/code&gt; from &lt;code&gt;java.lang.Object&lt;/code&gt; (which returns
  the identity hash code, an arbitrary value assigned to the object
  by the VM).&amp;nbsp; Therefore, the class is very likely to violate the
  invariant that equal objects must have equal hashcodes.&lt;/p&gt;

&lt;p&gt;If you don't think instances of this class will ever be inserted into a HashMap/HashTable,
the recommended &lt;code&gt;hashCode&lt;/code&gt; implementation to use is:&lt;/p&gt;
&lt;pre&gt;public int hashCode() {
  assert false : "hashCode not designed";
  return 42; // any arbitrary constant will do
  }&lt;/pre&gt;

    </Details></BugPattern><BugPattern abbrev='Se' category='BAD_PRACTICE' type='SE_BAD_FIELD'><ShortDescription>Non-transient non-serializable instance field in serializable class</ShortDescription><Details>

&lt;p&gt; This Serializable class defines a non-primitive instance field which is neither transient,
Serializable, or &lt;code&gt;java.lang.Object&lt;/code&gt;, and does not appear to implement
the &lt;code&gt;Externalizable&lt;/code&gt; interface or the
&lt;code&gt;readObject()&lt;/code&gt; and &lt;code&gt;writeObject()&lt;/code&gt; methods.&amp;nbsp;
Objects of this class will not be deserialized correctly if a non-Serializable
object is stored in this field.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='NP' category='CORRECTNESS' type='NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH'><ShortDescription>Value is null and guaranteed to be dereferenced on exception path</ShortDescription><Details>
          
              &lt;p&gt;
              There is a statement or branch on an exception path
                that if executed guarantees that
              a value is null at this point, and that
              value that is guaranteed to be dereferenced
              (except on forward paths involving runtime exceptions).
              &lt;/p&gt;
          
      </Details></BugPattern><BugCode abbrev='BC'><Description>Bad casts of object references</Description></BugCode><BugCode abbrev='ST'><Description>Misuse of static fields</Description></BugCode><BugCode cweid='476' abbrev='NP'><Description>Null pointer dereference</Description></BugCode><BugCode abbrev='Se'><Description>Incorrect definition of Serializable class</Description></BugCode><BugCode abbrev='IL'><Description>Infinite Loop</Description></BugCode><BugCode abbrev='EI'><Description>Method returning array may expose internal representation</Description></BugCode><BugCode cweid='218' abbrev='MS'><Description>Mutable static field</Description></BugCode><BugCode abbrev='SBSC'><Description>String concatenation in loop using + operator</Description></BugCode><BugCode abbrev='Dm'><Description>Dubious method used</Description></BugCode><BugCode cweid='192' abbrev='ICAST'><Description>Casting from integer values</Description></BugCode><BugCode abbrev='HE'><Description>Equal objects must have equal hashcodes</Description></BugCode><BugCode abbrev='FE'><Description>Test for floating point equality</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='94' priority_1='11' priority_2='22' total_size='3539' clock_seconds='11.99' referenced_classes='424' vm_version='25.31-b07' total_bugs='33' java_version='1.8.0_31' gc_seconds='0.80' alloc_mbytes='455.50' cpu_seconds='40.50' peak_mbytes='249.44' timestamp='Wed, 18 Feb 2015 09:43:44 +0100'><FileStats path='practicafinal/Calendario.java' size='52' bugHash='b9ac0863fa5b8d82e7fa04cca7998b63' bugCount='3'></FileStats><FileStats path='practicafinal/Directivo.java' size='18' bugHash='8d4c84e325bef127ebbd589491f97105' bugCount='3'></FileStats><FileStats path='practicafinal/Equipo.java' size='172' bugHash='5911cd1b4c42e651cf63d1afb207a420' bugCount='3'></FileStats><FileStats path='practicafinal/ErrorNumero.java' size='7' bugCount='0'></FileStats><FileStats path='practicafinal/Estadio.java' size='50' bugHash='a8686218a69efd6e9f30acafc446683e' bugCount='1'></FileStats><FileStats path='practicafinal/Jugador.java' size='66' bugHash='22efc9df6a4470df5d49a41bba396470' bugCount='4'></FileStats><FileStats path='practicafinal/JugadorCampo.java' size='46' bugHash='bcc9c8b578f096e68c441e14da692047' bugCount='2'></FileStats><FileStats path='practicafinal/Mercado.java' size='22' bugHash='f8926ee9b12bdf5aab97c561faf3fe24' bugCount='3'></FileStats><FileStats path='practicafinal/Partido.java' size='70' bugHash='16e8845012d974f0191104f0d92d7c1d' bugCount='2'></FileStats><FileStats path='practicafinal/Persona.java' size='42' bugCount='0'></FileStats><FileStats path='practicafinal/Portero.java' size='47' bugHash='6548263da889aaac2252a6e6a9d470d6' bugCount='1'></FileStats><FileStats path='practicafinal/Torneo.java' size='66' bugHash='9adac7778ed459be1397e1323ead098d' bugCount='2'></FileStats><FileStats path='practicafinal/Ventana.java' size='2881' bugHash='3c85c1d59122283f6f69e6736967a836' bugCount='9'></FileStats><PackageStats package='practicafinal' priority_1='11' total_bugs='33' priority_2='22' total_size='3539' total_types='94'><ClassStats bugs='3' size='52' priority_1='1' priority_2='2' interface='false' sourceFile='Calendario.java' class='practicafinal.Calendario'></ClassStats><ClassStats bugs='3' size='18' priority_1='1' priority_2='2' interface='false' sourceFile='Directivo.java' class='practicafinal.Directivo'></ClassStats><ClassStats bugs='3' size='172' priority_1='1' priority_2='2' interface='false' sourceFile='Equipo.java' class='practicafinal.Equipo'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='ErrorNumero.java' class='practicafinal.ErrorNumero'></ClassStats><ClassStats bugs='1' size='50' priority_2='1' interface='false' sourceFile='Estadio.java' class='practicafinal.Estadio'></ClassStats><ClassStats bugs='4' size='66' priority_2='4' interface='false' sourceFile='Jugador.java' class='practicafinal.Jugador'></ClassStats><ClassStats bugs='2' size='46' priority_1='1' priority_2='1' interface='false' sourceFile='JugadorCampo.java' class='practicafinal.JugadorCampo'></ClassStats><ClassStats bugs='3' size='22' priority_1='2' priority_2='1' interface='false' sourceFile='Mercado.java' class='practicafinal.Mercado'></ClassStats><ClassStats bugs='2' size='70' priority_1='1' priority_2='1' interface='false' sourceFile='Partido.java' class='practicafinal.Partido'></ClassStats><ClassStats bugs='0' size='42' interface='false' sourceFile='Persona.java' class='practicafinal.Persona'></ClassStats><ClassStats bugs='1' size='47' priority_2='1' interface='false' sourceFile='Portero.java' class='practicafinal.Portero'></ClassStats><ClassStats bugs='2' size='66' priority_1='1' priority_2='1' interface='false' sourceFile='Torneo.java' class='practicafinal.Torneo'></ClassStats><ClassStats bugs='9' size='2251' priority_1='3' priority_2='6' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$1'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$10'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$11'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$12'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$13'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$14'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$15'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$16'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$17'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$18'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$19'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$2'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$20'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$21'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$22'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$23'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$24'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$25'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$26'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$27'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$28'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$29'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$3'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$30'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$31'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$32'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$33'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$34'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$35'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$36'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$37'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$38'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$39'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$4'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$40'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$41'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$42'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$43'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$44'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$45'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$46'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$47'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$48'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$49'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$5'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$50'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$51'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$52'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$53'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$54'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$55'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$56'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$57'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$58'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$59'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$6'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$60'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$61'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$62'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$63'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$64'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$65'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$66'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$67'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$68'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$69'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$7'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$70'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$71'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$72'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$73'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$74'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$75'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$76'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$77'></ClassStats><ClassStats bugs='0' size='25' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$78'></ClassStats><ClassStats bugs='0' size='26' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$79'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$8'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$80'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$81'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ventana.java' class='practicafinal.Ventana$9'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='713' totalMilliseconds='1239' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' standardDeviationMircosecondsPerInvocation='3351' maxMicrosecondsPerInvocation='73196' invocations='1737'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1775' totalMilliseconds='752' name='edu.umd.cs.findbugs.detect.FieldItemSummary' standardDeviationMircosecondsPerInvocation='4083' maxMicrosecondsPerInvocation='36506' invocations='424'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1531' totalMilliseconds='710' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' standardDeviationMircosecondsPerInvocation='13779' maxMicrosecondsPerInvocation='293770' invocations='464'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='479' totalMilliseconds='574' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' standardDeviationMircosecondsPerInvocation='1274' maxMicrosecondsPerInvocation='37178' invocations='1198'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='269' totalMilliseconds='469' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' standardDeviationMircosecondsPerInvocation='1029' maxMicrosecondsPerInvocation='35188' invocations='1741'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='955' totalMilliseconds='443' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' standardDeviationMircosecondsPerInvocation='3018' maxMicrosecondsPerInvocation='39343' invocations='464'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='914' totalMilliseconds='424' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' standardDeviationMircosecondsPerInvocation='2632' maxMicrosecondsPerInvocation='31306' invocations='464'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='876' totalMilliseconds='420' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' standardDeviationMircosecondsPerInvocation='2224' maxMicrosecondsPerInvocation='19432' invocations='480'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='844' totalMilliseconds='407' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' standardDeviationMircosecondsPerInvocation='2077' maxMicrosecondsPerInvocation='17252' invocations='483'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3529' totalMilliseconds='331' name='edu.umd.cs.findbugs.detect.RepeatedConditionals' standardDeviationMircosecondsPerInvocation='32388' maxMicrosecondsPerInvocation='315862' invocations='94'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='546' totalMilliseconds='254' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' standardDeviationMircosecondsPerInvocation='1308' maxMicrosecondsPerInvocation='17638' invocations='465'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='121' totalMilliseconds='204' name='edu.umd.cs.findbugs.util.TopologicalSort' standardDeviationMircosecondsPerInvocation='567' maxMicrosecondsPerInvocation='13536' invocations='1687'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='541' totalMilliseconds='196' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' standardDeviationMircosecondsPerInvocation='1304' maxMicrosecondsPerInvocation='13566' invocations='362'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='461' totalMilliseconds='195' name='edu.umd.cs.findbugs.detect.ExplicitSerialization' standardDeviationMircosecondsPerInvocation='3149' maxMicrosecondsPerInvocation='36546' invocations='424'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='442' totalMilliseconds='187' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' standardDeviationMircosecondsPerInvocation='996' maxMicrosecondsPerInvocation='8920' invocations='424'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='295' totalMilliseconds='140' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' standardDeviationMircosecondsPerInvocation='1522' maxMicrosecondsPerInvocation='31949' invocations='477'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='281' totalMilliseconds='130' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory' standardDeviationMircosecondsPerInvocation='733' maxMicrosecondsPerInvocation='8226' invocations='464'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='297' totalMilliseconds='126' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' standardDeviationMircosecondsPerInvocation='561' maxMicrosecondsPerInvocation='4464' invocations='424'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='253' totalMilliseconds='118' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' standardDeviationMircosecondsPerInvocation='2621' maxMicrosecondsPerInvocation='56693' invocations='466'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='274' totalMilliseconds='116' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' standardDeviationMircosecondsPerInvocation='723' maxMicrosecondsPerInvocation='10091' invocations='424'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='267' totalMilliseconds='113' name='edu.umd.cs.findbugs.detect.CalledMethods' standardDeviationMircosecondsPerInvocation='688' maxMicrosecondsPerInvocation='6736' invocations='424'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='257' totalMilliseconds='109' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' standardDeviationMircosecondsPerInvocation='671' maxMicrosecondsPerInvocation='8867' invocations='424'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1045' totalMilliseconds='98' name='edu.umd.cs.findbugs.detect.UnreadFields' standardDeviationMircosecondsPerInvocation='4273' maxMicrosecondsPerInvocation='38488' invocations='94'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='635' totalMilliseconds='90' name='edu.umd.cs.findbugs.ba.obl.ObligationAnalysis' standardDeviationMircosecondsPerInvocation='1187' maxMicrosecondsPerInvocation='7368' invocations='143'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='197' totalMilliseconds='83' name='edu.umd.cs.findbugs.detect.ReflectiveClasses' standardDeviationMircosecondsPerInvocation='492' maxMicrosecondsPerInvocation='4040' invocations='424'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='768' totalMilliseconds='72' name='edu.umd.cs.findbugs.detect.URLProblems' standardDeviationMircosecondsPerInvocation='4462' maxMicrosecondsPerInvocation='43471' invocations='94'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='756' totalMilliseconds='71' name='edu.umd.cs.findbugs.detect.FindOpenStream' standardDeviationMircosecondsPerInvocation='7038' maxMicrosecondsPerInvocation='68633' invocations='94'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='752' totalMilliseconds='70' name='edu.umd.cs.findbugs.detect.SerializableIdiom' standardDeviationMircosecondsPerInvocation='3287' maxMicrosecondsPerInvocation='31083' invocations='94'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='682' totalMilliseconds='64' name='edu.umd.cs.findbugs.detect.DefaultEncodingDetector' standardDeviationMircosecondsPerInvocation='5277' maxMicrosecondsPerInvocation='51214' invocations='94'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>